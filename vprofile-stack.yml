- name: creating the security group for ec2_instances
  hosts: localhost
  become: true
  connection: local
  gather_facts: false
  tasks:
    - name: importing the variables file1
      include_vars: vars/vpc_setup

    - name: importing the variables file2
      include_vars: vars/bastion_setup

    - name: importing the variables file3
      include_vars: vars/vpc-output.var

    - name: improting the variables file4
      include_vars: vars/vprofile_setup

    - name: creating the key pair for ec2_instances
      ec2_key:
        name: login-key
        region: "{{region}}"
        state: present
      register: keyout

    - debug:
        var: keyout

    - name: saving the key pair for ec2_instance
      copy:
        content: "{{keyout.key.private_key}}"
        dest: "./loginkey.pem"
        mode: 0600
      when: keyout.changed

    - name: security group for load balancer
      ec2_group:
        name: vprofile-elb
        description: allow port 80 from elb security
        region: "{{region}}"
        vpc_id: "{{vpcoutid}}"
        state: present
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        tags:
          Name: vprofile-elbsg
      register: vproelbsg_out

    - name: security group for vprofile-stack
      ec2_group:
        name: vprofile-stack
        description: allow port 80 from bastion security group
        region: "{{region}}"
        vpc_id: "{{vpcoutid}}"
        state: present
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproelbsg_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{bastionsgid}}"
      register: vprostacksg_out

    - name: security group for vprofile
      ec2_group:
        name: vprofile-stack
        description: allow all traffic from its own traffic
        region: "{{region}}"
        vpc_id: "{{vpcoutid}}"
        state: present
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vprostacksg_out.group_id}}"

    - name: creating the nginx ec2 instance
      ec2:
        key_name: login-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 200
        instance_tags:
          Name: nginx-server
          project: vprofile
          owner: devopsteam
        exact_count: 1
        count_tag:
          Name: nginx-server
          project: vprofile
          owner: devopsteam
        group_id: "{{vprostacksg_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: nginxsrv_out

    - name: creating the tomcat ec2 instance
      ec2:
        key_name: login-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 200
        instance_tags:
          Name: tomcat-server
          project: vprofile
          owner: devopsteam
        exact_count: 1
        count_tag:
          Name: tomcat-server
          project: vprofile
          owner: devopsteam
        group_id: "{{vprostacksg_out.group.id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: tomcatsrv_out

    - name: creating the memcache server
      ec2:
        key_name: login-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 200
        instance_tags:
          Name: mem01-server
          project: vprofile
          owner: devopsteam
        exact_count: 1
        count_tag:
          Name: mem01-server
          project: devopsteam
          owner: devopsteam
        group_id: "{{vprostaksg_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: mem01srv_out

    - name: creating the rabbitmq server
      ec2:
        key_name: login-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rabbtimq_ami}}"
        wait: yes
        wait_timeout: 200
        exact_count: 1
        count_tag:
          Name: rmq01-server
          project: vprofile
          owner: devopsteam
        group_id: "{{vprostacksg_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: rmq01srv_out

    - name: creating the mysql server
      ec2:
        key_name: login-key
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        instance_tags:
          Name: db01-server
          project: vprofile
          owner: devopsteam
        exact_count: 1
        count_tag:
          Name: db01-server
          project: vprofile
          owner: devopsteam
        group_id: "{{vprostacksg_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: db01srv_out

    - debug:
        var: db01srv_out



